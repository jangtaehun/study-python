상속
    1. 기존에 선언된 클래스의 필드를, 새롭게 만들 클래스의 필드로 사용하고자 할 때
    2. 여러 클래스를 선언하면서, 겹치는 필드가 있을 경우 부모 클래스를 선언한 뒤
       겹치는 필드를 구성하고 각 자식 클래스에 상속해준다(추상화).

다중 상속
    부모 클래스가 한 개가 아닌 여러 개이다. 이러한 기법을 다중 상속

모호성
    여러 부모의 필드 중 같은 이름의 필드를 자식 클래스에서 사용한다면, 어느 부모의 필드인지 알 수가 없기 때문에 이러한 성질을 모호성이라고 한다.

생성자
    부모 클래스에 생성자가 선ㅇ너되어 있고, 자식 클래스에는 기본 생성자가 있다면 부모 클래스 생성자를 자동으로 호출홰준다.
    하지만 자식 클래스에서 생성자를 직접 선언하면 부모 생성자를 자식 생성자에서 직접 호출해 주어야 한다.

자식 클래스에 생성자가 있을 때
    부모에 있는 필드와 자식에서 필요한 필드가 있을 때 부모 생성자를 호출해 부모 필드를 초기화 해주고 추가된 자식 필드를 추가로 초기화 해주어 야 할 때
자식 클래스에 생성자가 없을ㄷ 때 (기본 생성자만 있을 때)
    부모의 필드 외에 추가적인 필드가 없을 때, 부모 생성자를 그대로 사용한다.

상솟 문법
    class A:
        A 필드

    class B(A):
        B 필드

    A: 부모 클래스, 상위 클래스, 슈퍼 클래스, 기반 클래스
    B: 자식 클래스, 하위 클래스, 서브 클래스, 파생 클래스

super().__init__(): -> 부모 생성자
    자식 클래스 타입의 객체로 부모 필드에 접근할 수 있다.
    하지만 자식 생성자만 호출하기 떄문에, 자식 필드만 메모리에 할당된다고 생각할 수 있다.
    사실, 자식 생성자에는 항상 부모 생성자를 호출하기 때문에 자식 생성자 호출 시 부모와 자식 필드 모두 메모리에 할당된다.
    이 때 부모 생성자를 호출하는 방법은 super().__init__()을 사용하는 것이다.
    만약, super().__init__()을 직접 작성하지 않아도 컴파일러가 자동으로 작성해준다.

오버라이딩(재정의, 무시하기)
    부모 필드에서 선언한 메소드를 자식 필드에서 수정하고자 할 때 재정의를 해야한다.
    이는 자식에서 부모 필드의 메소드와 동일한 이름으로 선언하는 문법을 의미한다.
    접근한 객체와 가까운 곳부터 찾기 때문에, 자식 필드에 해당 메소드가 있다면 재정의된 메소드가 실행된다.


[종합 실습]
은행
   예금주
   계좌번호(중복 없음)
   핸드폰번호(중복 없음)
   비밀번호
   통장잔고

신한
   입금 시 수수료 50%
국민
   출금 시 수수료 50%
카카오
   잔액조회 재산 반토막

은행은 3개를 선언한다.
모든 은행 고객을 관리하는 DB를 2차원 list로 선언한다.
모든 은행은 출금, 입금, 잔액조회, 계좌개설, 계좌번호 중복검사, 로그인, 핸드폰 번호 중복검사 서비스가 있다.
화면쪽 메뉴는 "계좌개설, 입금하기, 출금하기, 잔액조회, 계좌번호 찾기(새로운 계좌 설정, 핸드폰 번호로 서비스 이용가능), 나가기"로 구성되어 있다.